{{/*

Made by naemless.
This is a take on the swift mute command by enigma. I remade it because enigma's was terrible to read/edit.

Usage: -sm <Users: mention/id>
Aditionally you can add the -p flag followed by a number to purge that many messages from chat
Aliases to -p include: -purge, -d, -delete

Check that the config variables are setup way at the top of the code before complaining the command doesnt work.

*/}}

{{/*start of config variables*/}}

{{$user_limit := 10}}{{/*the max amount of users you can mute at a time*/}}
{{$mute_duration := 600}}{{/*in seconds*/}}
{{$mute_role_name := "YOUR ROLE NAME HERE"}}{{/*the role name of the role that should be assigned when the command is used*/}}
{{$log_channel := YOUR CHANNEL ID HERE}}{{/*channel id of the channel usages of this command should be sent to*/}}

{{/*end of config values*/}}

{{$users := reFindAll `\d{17,19}` .StrippedMsg}}

{{$noArgsError := cembed
    "title" "Incorrect usage"
    "color" 0xff0000
    "fields" (cslice 
        (sdict "name" "Correct usage" "value" "`-sm <Users: mention/id>`\nUse the -p flag followed by a number to purge that amount of messages from the channel\nAliases to the flag are: -p, -purge, -d, -delete")
    )
}}

{{$limitExceededError := cembed
    "description" (print "You can't swift mute more than " $user_limit " at once")
    "color" 0xff0000
}}

{{$noUsersError := cembed
 	"description" "Please mention someone/pass their id to swift mute them"
	"color" 0xff0000
 }}

{{$invalidUsersError := cembed
	"description" "One of your ids/mentions is invalid. Please make sure that all the mentions/ids you passed are members that are still in this server"
	"color" 0xff0000
}}

{{if not .CmdArgs}}
    {{deleteMessage nil (sendMessageRetID nil $noArgsError) 15}}
    {{return}}
{{else if not $users}}
	{{deleteMessage nil (sendMessageRetID nil $noUsersError) 15}}
	{{return}}
{{else if gt (len $users|toInt) (toInt $user_limit)}}
    {{deleteMessage nil (sendMessageRetID nil $limitExceededError) 15}}
    {{return}}
{{end}}

{{/*initing the purge count and user list*/}}
{{$purge := 0}}
{{with reFindAllSubmatches `(?:-d|-delete|-p|-purge) (\d{1,2})` .StrippedMsg}}
    {{$purge = index . 0 1}}
{{end}}


{{$remove_dup_users := cslice}}
{{range $user := $users}}
    {{- if not (in $remove_dup_users $user)}}
        {{- $remove_dup_users = $remove_dup_users.Append $user}}
    {{- end}}
{{- end}}

{{$names := cslice}}
{{range $remove_dup_users}}
	{{if not (getMember .)}}
		{{deleteMessage nil (sendMessageRetID nil $invalidUsersError)}}
		{{return}}
	{{end}}
    {{giveRoleName . $mute_role_name}}
    {{takeRoleName . $mute_role_name $mute_duration}}
	{{$names = joinStr ">, <@" $names .}}
{{end}}

{{$msg := cembed 
    "description" (printf "%s swift muted <@%s>" .User.Username $names)
    "color" 0x34eb4c
}}

{{sendMessage $log_channel (complexMessage "content" (joinStr " " $users) "embed" $msg)}}
{{deleteTrigger 0}}
{{if $purge}}
    {{execAdmin "clean" $purge}}
{{end}}
